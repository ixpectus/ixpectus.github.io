---
title: "Базовые типы в haskell"
date: 2021-05-03T21:02:21+03:00
tags:
  - haskell 
summary: "Базовые типы в haskell"

---
title: "Базовые типы в haskell"
date: 2021-05-03T21:02:21+03:00
tags:
  - haskell 
summary: "Базовые типы в haskell"

---
title: "Базовые типы в haskell"
date: 2021-05-03T21:02:21+03:00
tags:
  - haskell 
summary: "Базовые типы в haskell"

---
title: "Базовые типы в haskell"
date: 2021-05-03T21:02:21+03:00
tags:
  - haskell 
summary: "Базовые типы в haskell"

---
title: "Базовые типы в haskell"
date: 2021-05-03T21:02:21+03:00
tags:
  - haskell 
summary: "Базовые типы в haskell"

---
title: "Базовые типы в haskell"
date: 2021-05-03T21:02:21+03:00
tags:
  - haskell 
summary: "Базовые типы в haskell"

---
title: "Базовые типы в haskell"
date: 2021-05-03T21:02:21+03:00
tags:
  - haskell 
summary: "Базовые типы в haskell"

Быстрый старт в react
Быстрый старт в react
Быстрый старт в react
Быстрый старт в react
```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <div>
        <h2>{header}</h2>
        <div>{body}</div>
      </div>
    );
  }
}
```

```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <div>
        <h2>{header}</h2>
        <div>{body}</div>
      </div>
    );
  }
}
```

```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <div>
        <h2>{header}</h2>
        <div>{body}</div>
      </div>
    );
  }
}
```

```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <div>
        <h2>{header}</h2>
        <div>{body}</div>
      </div>
    );
  }
}
```

```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <div>
        <h2>{header}</h2>
        <div>{body}</div>
      </div>
    );
  }
}
```

Если `<div>` с точки зрения верстки не нужен, то можно переписать так
```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <React.Fragment>
        <h2>{header}</h2>
        <div>{body}</div>
      </React.Fragment>
    );
  }
}
```

Если `<div>` с точки зрения верстки не нужен, то можно переписать так
```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <React.Fragment>
        <h2>{header}</h2>
        <div>{body}</div>
      </React.Fragment>
    );
  }
}
```

Если `<div>` с точки зрения верстки не нужен, то можно переписать так
```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <React.Fragment>
        <h2>{header}</h2>
        <div>{body}</div>
      </React.Fragment>
    );
  }
}
```

Если `<div>` с точки зрения верстки не нужен, то можно переписать так
```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <React.Fragment>
        <h2>{header}</h2>
        <div>{body}</div>
      </React.Fragment>
    );
  }
}
```

Если `<div>` с точки зрения верстки не нужен, то можно переписать так
```javasript
class Section extends React.Component {
  render() {
    const { header, body } = this.props;

    return (
      <React.Fragment>
        <h2>{header}</h2>
        <div>{body}</div>
      </React.Fragment>
    );
  }
}
```

https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
- Изменение элемент в массиве
  - На чистом js
    ```javascript
      const index = items.findIndex((item) => item.id === id);
      const newItem = { ...items[index], value: 'another value' };
      const newItems = [...items.slice(0, index), newItem, ...items.slice(index + 1)];
    ```
  - С помощью immutability-helper
    ```javascript
      const collection = { children: ['zero', 'one', 'two'] };
      const index = 1;
      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });
      // { children: ['zero', 1, 'two'] }
    ```
 
---

---

      import update from 'immutability-helper';

      const newCollection = update(collection, { children: { [index]: { $set: 1 } } });

    const newItems = items.filter((item) => item.id !== id);

https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
https://docs.k.avito.ru/other/job-docs/team-a/transfer/cvInTariffs/
    const newItems = items.filter((item) => item.id !== id);

    const newItems = items.filter((item) => item.id !== id);

    const newItems = items.filter((item) => item.id !== id);

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

	return activeContract.startTime.Equal(up.CreateTime) &&
		activeContract.finishTime.Equal(up.ExpireTime.V) &&
		up.MaxViews == int(activeContract.maxViews) &&
		activeContract.orderItemID == upOrderItemID

  static Body = (props) => {
    return <div className="modal-body">{props.children}</div>;
  };

  static Body = (props) => {
    return <div className="modal-body">{props.children}</div>;
  };

  static Body = (props) => {
    return <div className="modal-body">{props.children}</div>;
  };

  static Body = (props) => {
    return <div className="modal-body">{props.children}</div>;
  };

  static Body = (props) => {
    return <div className="modal-body">{props.children}</div>;
  };

  static Body = (props) => {
    return <div className="modal-body">{props.children}</div>;
  };

  static Body = (props) => {
    return <div className="modal-body">{props.children}</div>;
  };

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

tags:
  - react
  - javascript
summary: "Быстрый старт в react"

```
const sum = (a, b) => a + b;
```

```
const sum = (a, b) => a + b;
```

```
const sum = (a, b) => a + b;
```

delete from chat where job_seeker_id = 673717357;
delete from job_seekers_communication where id = 673717357;
insert into job_seekers_communication(id, state, cv_id, flow, source_id) values(673717357, 0, 2701089369, 40, 7);

delete from chat where job_seeker_id = 673717357;
delete from job_seekers_communication where id = 673717357;
insert into job_seekers_communication(id, state, cv_id, flow, source_id) values(673717357, 0, 2701089369, 40, 7);

### Пример деструктуризации массива
```javascript
const arr2 = [3, 10, 30];
const [var1, var2] = arr2;
console.log(var2); // выведет 3
```

### Пример деструктуризации массива
```javascript
const arr2 = [3, 10, 30];
const [var1, var2] = arr2;
console.log(var2); // выведет 3
```

### Пример деструктуризации массива
```javascript
const arr2 = [3, 10, 30];
const [var1, var2] = arr2;
console.log(var2); // выведет 3
```

### Пример деструктуризации массива
```javascript
const arr2 = [3, 10, 30];
const [var1, var2] = arr2;
console.log(var2); // выведет 3
```

### Пример деструктуризации массива
```javascript
const arr2 = [3, 10, 30];
const [var1, var2] = arr2;
console.log(var2); // выведет 3
```

### Пример деструктуризации массива
```javascript
const arr2 = [3, 10, 30];
const [var1, var2] = arr2;
console.log(var2); // выведет 3
```

acceptDestructuredObject
acceptDestructuredObject
## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

## Пример для объекта
Деструктуризацию можно провести прямо в объявлении функции
```javascript
const acceptFullObject = (obj) => console.log(obj);
const acceptDestructuredObject = ({ prop3 }) => console.log(prop3);
acceptFullObject(obj); // выведет { prop1: 'hiii', prop3: 33 }
acceptDestructuredObject(obj); // выведет 33
```

tags:
  - programming
  - functions

tags:
  - programming
  - functions
summary: "О функциях в языках программирования"

tags:
  - programming
  - functions
summary: "О функциях в языках программирования"

tags:
  - programming
  - functions
summary: "О функциях в языках программирования"

tags:
  - programming
  - functions
summary: "О функциях в языках программирования"

tags:
  - programming
  - functions
summary: "О функциях в языках программирования"

tags:
  - programming
  - functions
summary: "О функциях в языках программирования"

tags:
  - programming
  - functions
summary: "О функциях в языках программирования"

## Типичные представители 

## Основные особенности 

## Основные особенности 

## Основные особенности 

## Основные особенности 

## Основные особенности 

summary: "Кратко о некоторых парадигмах языков программирования"

summary: "Кратко о некоторых парадигмах языков программирования"

summary: "Кратко о некоторых парадигмах языков программирования"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

summary: "Особенности функций в javascript"

./node_modules/.bin/prettier
- `npx eslint .` запуск линтера

tags:
  - haskell 

tags:
  - haskell 

tags:
  - haskell 

  - environment 

  - environment 

  - environment 
  - javascript 

tags:
  - environment 
  - javascript 

tags:
  - environment 
  - javascript 

tags:
  - environment 
  - javascript 

tags:
  - environment 
  - javascript 

tags:
  - environment 
  - javascript 

---
title: "Функции"
date: 2021-10-03T21:19:14+03:00
tags:
  - programming
  - functions
summary: "О функциях в языках программирования"
---
# Функции 

---
title: "Функции"
date: 2021-10-03T21:19:14+03:00
tags:
  - programming
  - functions
summary: "О функциях в языках программирования"
---
# Функции 

2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
2021-12-03T16:29:33+03:00
tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

tags:
  - linux 
  - cli
summary: "dd умеет читать побайтово с устройства"

- `-d` можно задать разделитель для csv файла, например `xsv -d ";"`

- `-d` можно задать разделитель для csv файла, например `xsv -d ";"`

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

---
title: "psql"
date: 2020-06-17T10:34:36+03:00
tags:
  - postgresql
  - psql
summary: "Основные команды psql"
---

create table some_data
(
    id         bigint,
    count      int, 
);

create table some_data
(
    id         bigint,
    count      int, 
);

create table some_data
(
    id         bigint,
    count      int, 
);

create table some_data
(
    id         bigint,
    count      int, 
);

pg_size_pretty
pg_size_pretty
pg_size_pretty
pg_size_pretty
pg_size_pretty
pg_size_pretty
####
####
####
####
#### Шаг 1. Создание таблицы 

#### Шаг 1. Создание таблицы 

#### Шаг 1. Создание таблицы 

#### Шаг 1. Создание таблицы 

Размер таблицы
```sql
SELECT pg_size_pretty( pg_total_relation_size('some_data') );
```

Размер таблицы
```sql
SELECT pg_size_pretty( pg_total_relation_size('some_data') );
```

Размер таблицы
```sql
SELECT pg_size_pretty( pg_total_relation_size('some_data') );
```

SELECT pg_size_pretty( pg_total_relation_size('some_data') );

SELECT pg_size_pretty( pg_total_relation_size('some_data') );

SELECT pg_size_pretty( pg_total_relation_size('some_data') );

SELECT pg_size_pretty( pg_total_relation_size('some_data') );

SELECT pg_size_pretty( pg_total_relation_size('some_data') );

SELECT pg_size_pretty( pg_total_relation_size('some_data') );

create table some_data
(
    id         bigint,
    count      int 
);

create table some_data
(
    id         bigint,
    count      int 
);

create table some_data
(
    id         bigint,
    count      int 
);

create table some_data
(
    id         bigint,
    count      int 
);

create table some_data
(
    id         bigint,
    count      int 
);

create table some_data
(
    id         bigint,
    count      int 
);

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

#### Шаг 3. Многократные апдейты одной строки 

idle in transaction
idle in transaction
idle in transaction
idle in transaction
idle in transaction
idle in transaction
idle in transaction
```bash
 for i in {01..1000}; do psql -h 0.0.0.0 -d postgres -p 5433 -d some_db -c "update some_data set count=2;"; done
```

```bash
 for i in {01..1000}; do psql -h 0.0.0.0 -d postgres -p 5433 -d some_db -c "update some_data set count=2;"; done
```

```bash
 for i in {01..1000}; do psql -h 0.0.0.0 -d postgres -p 5433 -d some_db -c "update some_data set count=2;"; done
```

```bash
 for i in {01..1000}; do psql -h 0.0.0.0 -d postgres -p 5433 -d some_db -c "update some_data set count=2;"; done
```

```bash
 for i in {01..1000}; do psql -h 0.0.0.0 -d postgres -p 5433 -d some_db -c "update some_data set count=2;"; done
```

```bash
 for i in {01..1000}; do psql -h 0.0.0.0 -d postgres -p 5433 -d some_db -c "update some_data set count=2;"; done
```

```bash
 for i in {01..1000}; do psql -h 0.0.0.0 -d postgres -p 5433 -d some_db -c "update some_data set count=2;"; done
```

```bash
 for i in {01..1000}; do psql -h 0.0.0.0 -d postgres -p 5433 -d some_db -c "update some_data set count=2;"; done
```

select
  autovacuum_count,
  last_autovacuum
from
  pg_stat_user_tables
where
  relname = 'some_data';

select
  autovacuum_count,
  last_autovacuum
from
  pg_stat_user_tables
where
  relname = 'some_data';

select
  autovacuum_count,
  last_autovacuum
from
  pg_stat_user_tables
where
  relname = 'some_data';

select
  autovacuum_count,
  last_autovacuum
from
  pg_stat_user_tables
where
  relname = 'some_data';

#### Шаг 4. Многократные апдейты одной строки c параллельно открытой транзакцией

#### Шаг 4. Многократные апдейты одной строки c параллельно открытой транзакцией

#### Шаг 4. Многократные апдейты одной строки c параллельно открытой транзакцией

```sql
select
  n_live_tup, /*актуальные строки*/
  n_dead_tup  /*удаленные строки*/
from
  pg_stat_all_tables
where
  relname = 'some_data';
```
```
 n_live_tup | n_dead_tup 
------------+------------
          1 |       1000
```

```sql
select
  n_live_tup, /*актуальные строки*/
  n_dead_tup  /*удаленные строки*/
from
  pg_stat_all_tables
where
  relname = 'some_data';
```
```
 n_live_tup | n_dead_tup 
------------+------------
          1 |       1000
```

```sql
select
  n_live_tup, /*актуальные строки*/
  n_dead_tup  /*удаленные строки*/
from
  pg_stat_all_tables
where
  relname = 'some_data';
```
```
 n_live_tup | n_dead_tup 
------------+------------
          1 |       1000
```

```sql
select
  n_live_tup, /*актуальные строки*/
  n_dead_tup  /*удаленные строки*/
from
  pg_stat_all_tables
where
  relname = 'some_data';
```
```
 n_live_tup | n_dead_tup 
------------+------------
          1 |       1000
```

```sql
select
  n_live_tup, /*актуальные строки*/
  n_dead_tup  /*удаленные строки*/
from
  pg_stat_all_tables
where
  relname = 'some_data';
```
```
 n_live_tup | n_dead_tup 
------------+------------
          1 |       1000
```

```sql
select
  n_live_tup, /*актуальные строки*/
  n_dead_tup  /*удаленные строки*/
from
  pg_stat_all_tables
where
  relname = 'some_data';
```
```
 n_live_tup | n_dead_tup 
------------+------------
          1 |       1000
```

```sql
select
  n_live_tup, /*актуальные строки*/
  n_dead_tup  /*удаленные строки*/
from
  pg_stat_all_tables
where
  relname = 'some_data';
```
```
 n_live_tup | n_dead_tup 
------------+------------
          1 |       1000
```

```sql
select
  n_live_tup, /*актуальные строки*/
  n_dead_tup  /*удаленные строки*/
from
  pg_stat_all_tables
where
  relname = 'some_data';
```
```
 n_live_tup | n_dead_tup 
------------+------------
          1 |       1000
```

---
title: "О парадигмах языков программирования"
date: 2021-10-13T09:53:33+03:00
tags:
  - programming
  - functions
summary: "Кратко о некоторых парадигмах языков программирования"
---

---
title: "О парадигмах языков программирования"
date: 2021-10-13T09:53:33+03:00
tags:
  - programming
  - functions
summary: "Кратко о некоторых парадигмах языков программирования"
---

---
title: "О парадигмах языков программирования"
date: 2021-10-13T09:53:33+03:00
tags:
  - programming
  - functions
summary: "Кратко о некоторых парадигмах языков программирования"
---

---
title: "О парадигмах языков программирования"
date: 2021-10-13T09:53:33+03:00
tags:
  - programming
  - functions
summary: "Кратко о некоторых парадигмах языков программирования"
---

---
title: "О парадигмах языков программирования"
date: 2021-10-13T09:53:33+03:00
tags:
  - programming
  - functions
summary: "Кратко о некоторых парадигмах языков программирования"
---

Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
Заметки о возможно интервью по system design для разработки аналога bit.ly
tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

tags:
  - programming
  - abstractions
summary: "Немного об абстракциях"

|----------
|----------
|----------
|----------
|----------
|----------
|----------
|Модель взаимодействия|Запрос-ответ|Двунаправленный   |То есть в случае вебсокета сервер может по своей инициативе отправить сообщение клиенту|

|Модель взаимодействия|Запрос-ответ|Двунаправленный   |То есть в случае вебсокета сервер может по своей инициативе отправить сообщение клиенту|

|Модель взаимодействия|Запрос-ответ|Двунаправленный   |То есть в случае вебсокета сервер может по своей инициативе отправить сообщение клиенту|

|Модель взаимодействия|Запрос-ответ|Двунаправленный   |То есть в случае вебсокета сервер может по своей инициативе отправить сообщение клиенту|

|Модель взаимодействия|Запрос-ответ|Двунаправленный   |То есть в случае вебсокета сервер может по своей инициативе отправить сообщение клиенту|

|Модель взаимодействия|Запрос-ответ|Двунаправленный   |То есть в случае вебсокета сервер может по своей инициативе отправить сообщение клиенту|

|Модель взаимодействия|Запрос-ответ|Двунаправленный   |То есть в случае вебсокета сервер может по своей инициативе отправить сообщение клиенту|

### В чём сложность 

### В чём сложность 

### По нагрузке 
- какое количество ежедневно активных пользователей ожидаем
- сколько в среднем один пользователь может оставлять ссылок
- как долго нужно будет хранить созданную ссылку
### По продукту 
- вид ссылки может быть какой угодно, сколько символов должно быть в ссылке, есть ли ограничения
- есть какая-то бизнес модель, на чём планируем в будущем зарабатывать
- есть ли представление о наших потенциальных пользователях(b2b, b2c)
- как планируем продвигать продукт
- хотим ли мы вводить какие-то ограничения на одного юзера, будем ли сейчас думать о фроде, модерации этих ссылок или ссылки могут быть какие угодно
### Нефункциональные требования 
- как долго может происходить создание ссылки
- как долго может происходить редирект после перехода по ссылке

### По нагрузке 
- какое количество ежедневно активных пользователей ожидаем
- сколько в среднем один пользователь может оставлять ссылок
- как долго нужно будет хранить созданную ссылку
### По продукту 
- вид ссылки может быть какой угодно, сколько символов должно быть в ссылке, есть ли ограничения
- есть какая-то бизнес модель, на чём планируем в будущем зарабатывать
- есть ли представление о наших потенциальных пользователях(b2b, b2c)
- как планируем продвигать продукт
- хотим ли мы вводить какие-то ограничения на одного юзера, будем ли сейчас думать о фроде, модерации этих ссылок или ссылки могут быть какие угодно
### Нефункциональные требования 
- как долго может происходить создание ссылки
- как долго может происходить редирект после перехода по ссылке

### По нагрузке 
- какое количество ежедневно активных пользователей ожидаем
- сколько в среднем один пользователь может оставлять ссылок
- как долго нужно будет хранить созданную ссылку
### По продукту 
- вид ссылки может быть какой угодно, сколько символов должно быть в ссылке, есть ли ограничения
- есть какая-то бизнес модель, на чём планируем в будущем зарабатывать
- есть ли представление о наших потенциальных пользователях(b2b, b2c)
- как планируем продвигать продукт
- хотим ли мы вводить какие-то ограничения на одного юзера, будем ли сейчас думать о фроде, модерации этих ссылок или ссылки могут быть какие угодно
### Нефункциональные требования 
- как долго может происходить создание ссылки
- как долго может происходить редирект после перехода по ссылке

### По нагрузке 
- какое количество ежедневно активных пользователей ожидаем
- сколько в среднем один пользователь может оставлять ссылок
- как долго нужно будет хранить созданную ссылку
### По продукту 
- вид ссылки может быть какой угодно, сколько символов должно быть в ссылке, есть ли ограничения
- есть какая-то бизнес модель, на чём планируем в будущем зарабатывать
- есть ли представление о наших потенциальных пользователях(b2b, b2c)
- как планируем продвигать продукт
- хотим ли мы вводить какие-то ограничения на одного юзера, будем ли сейчас думать о фроде, модерации этих ссылок или ссылки могут быть какие угодно
### Нефункциональные требования 
- как долго может происходить создание ссылки
- как долго может происходить редирект после перехода по ссылке

- какие платформы хотим поддерживать, планируются ли приложения ?

- какие платформы хотим поддерживать, планируются ли приложения

- какие платформы хотим поддерживать, планируются ли приложения

- какие платформы хотим поддерживать, планируются ли приложения

- какие платформы хотим поддерживать, планируются ли приложения

- рассчитываем на какую-то конкретную страну, о нескольких странах или всём мире 

- рассчитываем на какую-то конкретную страну, о нескольких странах или всём мире 

- рассчитываем на какую-то конкретную страну, о нескольких странах или всём мире 

- если одну и ту же ссылку вобьют разные пользователи они должны отличаться или нет 

- если одну и ту же ссылку вобьют разные пользователи они должны отличаться или нет 

- если одну и ту же ссылку вобьют разные пользователи они должны отличаться или нет 

- если одну и ту же ссылку вобьют разные пользователи они должны отличаться или нет 

- будем ли валидировать ссылки

- будем ли валидировать ссылки

- будем ли валидировать ссылки
- будем ли ограничивать длину ссылки по размеру

- будем ли валидировать ссылки
- будем ли ограничивать длину ссылки по размеру

date: 2022-01-28T20:31:18+03:00

date: 2022-01-28T20:31:18+03:00

date: 2022-01-28T20:31:18+03:00

date: 2022-01-28T20:31:18+03:00

date: 2022-01-28T20:31:18+03:00

date: 2022-01-28T20:31:18+03:00

Заметки о возможно интервью по system design для разработки аналога bit.ly
---
title: "System design на примере bit.ly"
date: 2022-01-28T20:31:18+03:00
tags:
  - programming
  - system design
summary: "Заметки о возможно интервью по system design для разработки аналога bit.ly"
---
## Как сейчас работает [bitly](https://bitly.com/) 
- Сокращатель ссылок, получает оригинальную ссылку и генерирует новую
- Если сгенерировать ссылку на один и тот же сайт в разных сессиях, то она будет разной

## Какое у него сейчас время ответа
- На генерацию ссылки 1c - 1.5c
- Время редиректа на нужную ссылку колебалось от 140 до 400мс

## Потенциальные вопросы 
### По нагрузке 
- какое количество ежедневно активных пользователей ожидаем
- сколько в среднем один пользователь может оставлять ссылок
- как долго нужно будет хранить созданную ссылку
### По продукту 
- вид ссылки может быть какой угодно, сколько символов должно быть в ссылке, есть ли ограничения
- есть какая-то бизнес модель, на чём планируем в будущем зарабатывать
- есть ли представление о наших потенциальных пользователях(b2b, b2c)
- как планируем продвигать продукт
- хотим ли мы вводить какие-то ограничения на одного юзера, будем ли сейчас думать о фроде, модерации этих ссылок или ссылки могут быть какие угодно
- какие платформы хотим поддерживать, планируются ли приложения
- рассчитываем на какую-то конкретную страну, о нескольких странах или всём мире 
- если одну и ту же ссылку вобьют разные пользователи они должны отличаться или нет 
- будем ли валидировать ссылки
- будем ли ограничивать длину ссылки по размеру
### Нефункциональные требования 
- как долго может происходить создание ссылки
- как долго может происходить редирект после перехода по ссылке

## Возможные ответы 
### По нагрузке 
- `какое количество ежедневно активных пользователей ожидаем` - 10млн будут писать, 100млн читать, но в дальнейшем хочется масштабироваться
- `сколько в среднем один пользователь может оставлять ссылок` - 5, но могут быть и пользователи, которые оставляют тысячи ссылок
- `как долго нужно будет хранить созданную ссылку` - очень долго, допустим год
### По продукту 
- `вид ссылки может быть какой угодно, сколько символов должно быть в ссылке, есть ли ограничения` чем меньше, тем лучше, хотелось бы не больше 5
- `есть какая-то бизнес модель, на чём планируем в будущем зарабатывать` прямо сейчас об этом не думаем, наша цель набрать аудиторию
- `есть ли представление о наших потенциальных пользователях(b2b, b2c)` тоже пока неясно, кому больше зайдет
- `как планируем продвигать продукт` аналогично
- `хотим ли мы вводить какие-то ограничения на одного юзера, будем ли сейчас думать о фроде, модерации этих ссылок или ссылки могут быть какие угодно` возможно стоит предусмотреть какой-то черный список ссылок
- `рассчитываем на какую-то конкретную страну, о нескольких странах или всём мире` сначала запускаемся в России, в дальнейшем хотим масштабироваться
- `если одну и ту же ссылку вобьют разные пользователи они должны отличаться или нет` должны отличаться
- `будем ли валидировать ссылки` валидация только по формату урла
- `будем ли ограничивать длину ссылки по размеру` давайте ограничим, ну пусть 300 символов
### Нефункциональные требования 
- `как долго может происходить создание ссылки` чтобы пользователю, казалось, что всё происходит моментально
- `как долго может происходить редирект после перехода по ссылке` аналогично, пользователь не должен этого замечать

## Возможное решение 
### Технические вопросы 
- по какой логике сокращать ссылки, учитывая требования
  - для одной ссылки могут быть разные сокращенные ссылки
  - максимальное количество символов в ссылке 5
- какое хранилище выбрать
 - количество чтений будет больше, чем записи, но не на порядки(возможно на один порядок, то есть в 10 раз будет больше) 
 - в день пишут 10млн * 5 - 50млн ссылок создаётся

### Как генерировать ссылку
- Хэш функции не очень подходят, поскольку возможные коллизии
- Случайная последовательность тоже может привести к коллизиям, которые нужно разруливать
- Одна и та же ссылка может отличаться(можно учитывать дату и время и ip адрес при кодировании)

### Примерные рассчеты  
- 10млн(пользователь в день, которые создают ссылки) * 5 (среднее количество ссылок) * 300(максимальная длина ссылки) * 4 байта (размер одного символа) = 60000000000 байт = примерно 55 гигабайт в день


## Как сейчас работает [bitly](https://bitly.com/) 
- Сокращатель ссылок, получает оригинальную ссылку и генерирует новую
- Если сгенерировать ссылку на один и тот же сайт в разных сессиях, то она будет разной

## Какое у него сейчас время ответа
- На генерацию ссылки 1c - 1.5c
- Время редиректа на нужную ссылку колебалось от 140 до 400мс

## Потенциальные вопросы 
### По нагрузке 
- какое количество ежедневно активных пользователей ожидаем
- сколько в среднем один пользователь может оставлять ссылок
- как долго нужно будет хранить созданную ссылку
### По продукту 
- вид ссылки может быть какой угодно, сколько символов должно быть в ссылке, есть ли ограничения
- есть какая-то бизнес модель, на чём планируем в будущем зарабатывать
- есть ли представление о наших потенциальных пользователях(b2b, b2c)
- как планируем продвигать продукт
- хотим ли мы вводить какие-то ограничения на одного юзера, будем ли сейчас думать о фроде, модерации этих ссылок или ссылки могут быть какие угодно
- какие платформы хотим поддерживать, планируются ли приложения
- рассчитываем на какую-то конкретную страну, о нескольких странах или всём мире 
- если одну и ту же ссылку вобьют разные пользователи они должны отличаться или нет 
- будем ли валидировать ссылки
- будем ли ограничивать длину ссылки по размеру
### Нефункциональные требования 
- как долго может происходить создание ссылки
- как долго может происходить редирект после перехода по ссылке

## Возможные ответы 
### По нагрузке 
- `какое количество ежедневно активных пользователей ожидаем` - 10млн будут писать, 100млн читать, но в дальнейшем хочется масштабироваться
- `сколько в среднем один пользователь может оставлять ссылок` - 5, но могут быть и пользователи, которые оставляют тысячи ссылок
- `как долго нужно будет хранить созданную ссылку` - очень долго, допустим год
### По продукту 
- `вид ссылки может быть какой угодно, сколько символов должно быть в ссылке, есть ли ограничения` чем меньше, тем лучше, хотелось бы не больше 5
- `есть какая-то бизнес модель, на чём планируем в будущем зарабатывать` прямо сейчас об этом не думаем, наша цель набрать аудиторию
- `есть ли представление о наших потенциальных пользователях(b2b, b2c)` тоже пока неясно, кому больше зайдет
- `как планируем продвигать продукт` аналогично
- `хотим ли мы вводить какие-то ограничения на одного юзера, будем ли сейчас думать о фроде, модерации этих ссылок или ссылки могут быть какие угодно` возможно стоит предусмотреть какой-то черный список ссылок
- `рассчитываем на какую-то конкретную страну, о нескольких странах или всём мире` сначала запускаемся в России, в дальнейшем хотим масштабироваться
- `если одну и ту же ссылку вобьют разные пользователи они должны отличаться или нет` должны отличаться
- `будем ли валидировать ссылки` валидация только по формату урла
- `будем ли ограничивать длину ссылки по размеру` давайте ограничим, ну пусть 300 символов
### Нефункциональные требования 
- `как долго может происходить создание ссылки` чтобы пользователю, казалось, что всё происходит моментально
- `как долго может происходить редирект после перехода по ссылке` аналогично, пользователь не должен этого замечать

## Возможное решение 
### Технические вопросы 
- по какой логике сокращать ссылки, учитывая требования
  - для одной ссылки могут быть разные сокращенные ссылки
  - максимальное количество символов в ссылке 5
- какое хранилище выбрать
 - количество чтений будет больше, чем записи, но не на порядки(возможно на один порядок, то есть в 10 раз будет больше) 
 - в день пишут 10млн * 5 - 50млн ссылок создаётся

### Как генерировать ссылку
- Хэш функции не очень подходят, поскольку возможные коллизии
- Случайная последовательность тоже может привести к коллизиям, которые нужно разруливать
- Одна и та же ссылка может отличаться(можно учитывать дату и время и ip адрес при кодировании)

### Примерные рассчеты  
- 10млн(пользователь в день, которые создают ссылки) * 5 (среднее количество ссылок) * 300(максимальная длина ссылки) * 4 байта (размер одного символа) = 60000000000 байт = примерно 55 гигабайт в день


tags:
  - programming
  - system design
summary: "Заметки о возможно интервью по system design для разработки аналога bit.ly"

summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

tags:
  - programming
  - system design
summary: "Заметки о возможном интервью по system design для разработки аналога bit.ly"

- количество активных пользователей в день
- какое количество активных пользователей пишет сообщения
- сколько в среднем один пользователь пишет сообщений в день
- должна быть авторизация, регистрация
- делаем только сайт или должны быть приложения  

- количество активных пользователей в день
- какое количество активных пользователей пишет сообщения
- сколько в среднем один пользователь пишет сообщений в день
- должна быть авторизация, регистрация
- делаем только сайт или должны быть приложения  

- количество активных пользователей в день
- какое количество активных пользователей пишет сообщения
- сколько в среднем один пользователь пишет сообщений в день
- должна быть авторизация, регистрация
- делаем только сайт или должны быть приложения  

- какое количество активных пользователей пишет сообщения
- сколько в среднем один пользователь пишет сообщений в день

- какое количество активных пользователей пишет сообщения
- сколько в среднем один пользователь пишет сообщений в день

- какое количество активных пользователей пишет сообщения
- сколько в среднем один пользователь пишет сообщений в день

- количество активных пользователей в день

- количество активных пользователей в день

- нужно ли уведомлять пользователей на почту, слать пуши в приложения с уведомлениями о том, что в его ленте появилось новое сообщение

- должна быть авторизация, регистрация
- делаем только сайт или должны быть приложения  
- есть ли ограничение на количество символов от одного пользователя
- храним ли мы сообщения от пользователей бесконечно или нет
- нужно ли уведомлять пользователей на почту, слать пуши в приложения с уведомлениями о том, что в его ленте появилось новое сообщение

- должна быть авторизация, регистрация
- делаем только сайт или должны быть приложения  
- есть ли ограничение на количество символов от одного пользователя
- храним ли мы сообщения от пользователей бесконечно или нет
- нужно ли уведомлять пользователей на почту, слать пуши в приложения с уведомлениями о том, что в его ленте появилось новое сообщение

- нужно ли уведомлять пользователей на почту, слать пуши в приложения с уведомлениями о том, что в его ленте появилось новое сообщение
- планируем ли собирать аналитику, есть ли тут какие-либо требования

- нужно ли уведомлять пользователей на почту, слать пуши в приложения с уведомлениями о том, что в его ленте появилось новое сообщение
- планируем ли собирать аналитику, есть ли тут какие-либо требования

- нужно ли уведомлять пользователей на почту, слать пуши в приложения с уведомлениями о том, что в его ленте появилось новое сообщение
- планируем ли собирать аналитику, есть ли тут какие-либо требования

- через какое время после публикации подписчики пользователя должны увидеть сообщения

- через какое время после публикации подписчики пользователя должны увидеть сообщения

- какие странице будут в приложении

- __какие странице будут в приложении__ ленты с подписками, ленты конкретных пользователей, личный кабинет пользователя

- __какие странице будут в приложении__ ленты с подписками, ленты конкретных пользователей, личный кабинет пользователя

- есть ли прогноз по заходу на различные типы страниц

- есть ли прогноз по заходу на различные типы страниц

- будут ли какие-нибудь треды

- будут ли какие-нибудь треды

- будут ли какие-нибудь треды

- будут ли какие-нибудь треды

- будут ли какие-нибудь треды

- будут ли какие-нибудь треды

- может ли быть задержка в несколько секунд
  - при попадании поста в чужие ленты
  - при попадании поста в свою ленту

- может ли быть задержка в несколько секунд
  - при попадании поста в чужие ленты
  - при попадании поста в свою ленту

- может ли быть задержка в несколько секунд
  - при попадании поста в чужие ленты
  - при попадании поста в свою ленту

- может ли быть задержка в несколько секунд
  - при попадании поста в чужие ленты
  - при попадании поста в свою ленту

- может ли быть задержка в несколько секунд
  - при попадании поста в чужие ленты
  - при попадании поста в свою ленту

- есть ли пользователи миллионники, как работа должна строится для них

- есть ли пользователи миллионники, как работа должна строится для них

- есть ли пользователи миллионники, как работа должна строится для них

- есть ли пользователи миллионники, как работа должна строится для них

- есть ли пользователи миллионники, как работа должна строится для них

- есть ли пользователи миллионники, как работа должна строится для них

- есть ли пользователи миллионники, как работа должна строится для них

- есть ли пользователи миллионники, как работа должна строится для них

